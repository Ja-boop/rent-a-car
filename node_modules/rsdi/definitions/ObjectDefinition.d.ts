import BaseDefinition from "../definitions/BaseDefinition";
import { IDIContainer } from "../DIContainer";
export interface Type<T> extends Function {
    new (...args: any[]): T;
}
/**
 * Definition to create object by provided class name
 */
export default class ObjectDefinition extends BaseDefinition {
    private readonly constructorFunction;
    private deps;
    private methods;
    constructor(constructorFunction: Type<any>);
    construct(...deps: BaseDefinition | any): ObjectDefinition;
    method(methodName: string, ...args: any): ObjectDefinition;
    resolve: <T>(diContainer: IDIContainer, parentDeps?: string[]) => T;
}
